name: 'PR Label Validator'

on:
  pull_request:
    types:
      - opened
      - labeled
      - unlabeled
      - reopened
      - synchronize

jobs:
  create-labels:
    if: |
      github.event_name == 'pull_request' &&
      github.event.action == 'opened' &&
      github.event.pull_request.base.ref == github.event.repository.default_branch
    name: 'Ensure Labels Exist'
    runs-on: ubuntu-latest
    steps:
      - name: Create missing labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelsToCreate = [
              { name: 'release:major', color: 'd73a4a', description: 'Major release' },
              { name: 'release:minor', color: 'a2eeef', description: 'Minor release' },
              { name: 'release:patch', color: '0e8a16', description: 'Patch release' },
              { name: 'release:prerelease', color: 'cfd3d7', description: 'Prerelease version' },
              { name: 'component:api', color: '5319e7', description: 'Affects API' },
              { name: 'component:worker', color: 'fbca04', description: 'Affects Worker' },
            ];

            const existingLabels = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });

            const existingNames = existingLabels.data.map(label => label.name);

            for (const label of labelsToCreate) {
              if (!existingNames.includes(label.name)) {
                await github.rest.issues.createLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name: label.name,
                  color: label.color,
                  description: label.description,
                });
                console.log(`✅ Created label: ${label.name}`);
              } else {
                console.log(`ℹ️ Label already exists: ${label.name}`);
              }
            }

  validate-labels:
    name: 'Validate PR Labels'
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == github.event.repository.default_branch
    steps:
      - name: Validate PR Labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prLabels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            const labels = prLabels.data.map(label => label.name);

            const versionLabels = ['release:major', 'release:minor', 'release:patch', 'release:prerelease'];
            const componentLabels = ['component:api', 'component:worker'];

            const selectedVersions = labels.filter(label => versionLabels.includes(label));
            const selectedComponents = labels.filter(label => componentLabels.includes(label));

            if (selectedVersions.length !== 1) {
              core.setFailed(`❌ You must apply exactly **one** version label: ${versionLabels.join(', ')}`);
            }

            if (selectedComponents.length === 0) {
              core.setFailed(`❌ At least **one** component label is required: ${componentLabels.join(', ')}`);
            }

            console.log(`✅ Version labels: ${selectedVersions}`);
            console.log(`✅ Component labels: ${selectedComponents}`);
