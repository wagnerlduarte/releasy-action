name: 'PR Label Validator'

on:
  pull_request:
    types: 
      - opened
      - labeled
      - unlabeled
      - reopened
      - synchronize

jobs:
  validate-labels:
    name: 'Validate PR Labels'
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == github.event.repository.default_branch
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prLabels = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
            });

            const labels = prLabels.data.map(label => label.name);
            
            const versionLabels = ['release:major', 'release:minor', 'release:patch', 'release:prerelease'];
            const componentLabels = ['component:api', 'component:worker'];

            const versions = labels.filter(label => versionLabels.includes(label));
            const components = labels.filter(label => componentLabels.includes(label));

            if (versions.length !== 1) {
              core.setFailed(`❌ You must apply exactly **one** version label: ${versionLabels.join(', ')}`);
            }

            if (components.length === 0) {
              core.setFailed(`❌ At least **one** component label is required: ${componentLabels.join(', ')}`);
            }

            console.log(`✅ Version labels: ${versions.join(', ')}`);
            console.log(`✅ Component labels: ${components.join(', ')}`);
