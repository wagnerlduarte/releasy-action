on:
  workflow_dispatch:
    inputs:
      release:
        type: choice
        required: true
        description: Release type (version bump)
        options:
          - patch
          - minor
          - major
          - prerelease
      tag:
        type: choice
        required: true
        description: Tag type
        options:
          - stable
          - beta

jobs:
  manual_tag_release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Git User
        uses: fregante/setup-git-user@v1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Fetch tags
        run: git fetch --tags

      - name: Get latest tag based on type
        id: get_tag
        run: |
          TAG_TYPE=${{ github.event.inputs.tag }}
          if [ "$TAG_TYPE" = "beta" ]; then
            PATTERN="*-beta*"
          else
            PATTERN="v*"
          fi
          TAG=$(git tag --list "$PATTERN" | sort -V | tail -n1)
          echo "latest_tag=${TAG:-v0.0.0}" >> $GITHUB_OUTPUT

      - name: Bump version
        id: bump_version
        run: |
          LATEST=${{ steps.get_tag.outputs.latest_tag }}
          RELEASE_TYPE=${{ github.event.inputs.release }}
          TAG_TYPE=${{ github.event.inputs.tag }}
          BASE_VERSION=$(echo "$LATEST" | sed 's/^v//' | sed 's/-.*//')

          if [ "$RELEASE_TYPE" = "prerelease" ]; then
            BASE_TAG="v$BASE_VERSION"
            if [ "$TAG_TYPE" = "beta" ]; then
              BASE_TAG="${BASE_TAG}-beta"
            fi

            COUNT=$(git tag --list "${BASE_TAG}.*" | wc -l)
            NEW_VERSION="${BASE_TAG}.$((COUNT + 1))"
          else
            echo "{ \"version\": \"$BASE_VERSION\" }" > package.json
            VERSION=$(npm version "$RELEASE_TYPE" --no-git-tag-version)
            VERSION=$(echo $VERSION | sed 's/^v//')

            if [ "$TAG_TYPE" = "beta" ]; then
              NEW_VERSION="v$VERSION-beta"
            else
              NEW_VERSION="v$VERSION"
            fi
          fi

          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Create tag and push
        run: |
          VERSION=${{ steps.bump_version.outputs.new_version }}
          git tag "$VERSION"
          git push origin "$VERSION"
